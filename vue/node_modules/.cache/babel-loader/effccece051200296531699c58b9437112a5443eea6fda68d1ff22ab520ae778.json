{"ast":null,"code":"import { getCurrentPosition } from '../../utils/geolocation';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      notices: [],\n      location: null,\n      error: null,\n      map: null\n    };\n  },\n  created() {\n    this.$request.get('/notice/selectAll').then(res => {\n      this.notices = res.data || [];\n    });\n  },\n  methods: {\n    async getLocation() {\n      try {\n        const position = await getCurrentPosition();\n        this.location = {\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        };\n        this.$nextTick(() => {\n          this.initMap();\n        });\n      } catch (error) {\n        this.error = error.message;\n      }\n    },\n    initMap() {\n      if (this.map) {\n        this.map.setView([this.location.latitude, this.location.longitude], 13);\n        return;\n      }\n      this.map = L.map('map').setView([this.location.latitude, this.location.longitude], 13);\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        maxZoom: 19\n      }).addTo(this.map);\n      L.marker([this.location.latitude, this.location.longitude]).addTo(this.map).bindPopup('You are here').openPopup();\n    }\n  }\n};","map":{"version":3,"names":["getCurrentPosition","L","name","data","user","JSON","parse","localStorage","getItem","notices","location","error","map","created","$request","get","then","res","methods","getLocation","position","latitude","coords","longitude","$nextTick","initMap","message","setView","tileLayer","maxZoom","addTo","marker","bindPopup","openPopup"],"sources":["src/views/manager/Home.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"card\" style=\"padding: 15px\">\n      您好，{{ user?.name }}！欢迎使用本系统\n    </div>\n\n    <div style=\"display: flex; margin: 10px 0\">\n      <div style=\"width: 50%;\" class=\"card\">\n        <div style=\"margin-bottom: 30px; font-size: 20px; font-weight: bold\">公告列表</div>\n        <div>\n          <el-timeline reverse slot=\"reference\">\n            <el-timeline-item v-for=\"item in notices\" :key=\"item.id\" :timestamp=\"item.time\">\n              <el-popover\n                  placement=\"right\"\n                  width=\"200\"\n                  trigger=\"hover\"\n                  :content=\"item.content\">\n                <span slot=\"reference\">{{ item.title }}</span>\n              </el-popover>\n            </el-timeline-item>\n          </el-timeline>\n        </div>\n      </div>\n    </div>\n\n    <div style=\"margin: 10px 0\">\n      <button @click=\"getLocation\">获取当前位置</button>\n      <p v-if=\"location\">纬度: {{ location.latitude }}, 经度: {{ location.longitude }}</p>\n      <p v-if=\"error\">{{ error }}</p>\n      <div v-if=\"location\" id=\"map\" style=\"width: 10%; height: 400px; margin-top: 20px;\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { getCurrentPosition } from '../../utils/geolocation';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      notices: [],\n      location: null,\n      error: null,\n      map: null,\n    };\n  },\n  created() {\n    this.$request.get('/notice/selectAll').then(res => {\n      this.notices = res.data || [];\n    });\n  },\n  methods: {\n    async getLocation() {\n      try {\n        const position = await getCurrentPosition();\n        this.location = {\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n        };\n        this.$nextTick(() => {\n          this.initMap();\n        });\n      } catch (error) {\n        this.error = error.message;\n      }\n    },\n    initMap() {\n      if (this.map) {\n        this.map.setView([this.location.latitude, this.location.longitude], 13);\n        return;\n      }\n      this.map = L.map('map').setView([this.location.latitude, this.location.longitude], 13);\n\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        maxZoom: 19,\n      }).addTo(this.map);\n\n      L.marker([this.location.latitude, this.location.longitude]).addTo(this.map)\n          .bindPopup('You are here')\n          .openPopup();\n    },\n  },\n};\n</script>\n\n<style scoped>\n#map {\n  width: 100%;\n  height: 400px;\n  margin-top: 20px;\n}\n</style>\n"],"mappings":"AAmCA,SAAAA,kBAAA;AACA,OAAAC,CAAA;AACA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,OAAA;MACAC,QAAA;MACAC,KAAA;MACAC,GAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,QAAA,CAAAC,GAAA,sBAAAC,IAAA,CAAAC,GAAA;MACA,KAAAR,OAAA,GAAAQ,GAAA,CAAAd,IAAA;IACA;EACA;EACAe,OAAA;IACA,MAAAC,YAAA;MACA;QACA,MAAAC,QAAA,SAAApB,kBAAA;QACA,KAAAU,QAAA;UACAW,QAAA,EAAAD,QAAA,CAAAE,MAAA,CAAAD,QAAA;UACAE,SAAA,EAAAH,QAAA,CAAAE,MAAA,CAAAC;QACA;QACA,KAAAC,SAAA;UACA,KAAAC,OAAA;QACA;MACA,SAAAd,KAAA;QACA,KAAAA,KAAA,GAAAA,KAAA,CAAAe,OAAA;MACA;IACA;IACAD,QAAA;MACA,SAAAb,GAAA;QACA,KAAAA,GAAA,CAAAe,OAAA,OAAAjB,QAAA,CAAAW,QAAA,OAAAX,QAAA,CAAAa,SAAA;QACA;MACA;MACA,KAAAX,GAAA,GAAAX,CAAA,CAAAW,GAAA,QAAAe,OAAA,OAAAjB,QAAA,CAAAW,QAAA,OAAAX,QAAA,CAAAa,SAAA;MAEAtB,CAAA,CAAA2B,SAAA;QACAC,OAAA;MACA,GAAAC,KAAA,MAAAlB,GAAA;MAEAX,CAAA,CAAA8B,MAAA,OAAArB,QAAA,CAAAW,QAAA,OAAAX,QAAA,CAAAa,SAAA,GAAAO,KAAA,MAAAlB,GAAA,EACAoB,SAAA,iBACAC,SAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}